# -*- coding: utf-8 -*-
import asyncio
from collections import defaultdict

from aiogram import F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.types import InputMediaPhoto
from loguru import logger

from dispatcher import router, bot, ADMIN_ID
from keyboards.NOX_keyboards import (selection_size_arbo_primo_table_keyboard_nox, TABLE_SIZES_NOX, keyboard_start_menu,
                                     keyboard_confirm_or_cancel)
from messages.messages import size_selection_text
from models.models import Review
from states.states import States

# –°–ª–æ–≤–∞—Ä—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–ª—å–±–æ–º–æ–≤
album_buffer = defaultdict(list)  # media_group_id -> List[Message]


# 1. –í—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞
@router.callback_query(F.data == "nox_table")
async def handle_nox_table_selection(callback: CallbackQuery, state: FSMContext):
    """
    üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–æ–ª ARBO NOX".
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç–æ–ª–∞.
    """
    await callback.message.edit_text(size_selection_text, reply_markup=selection_size_arbo_primo_table_keyboard_nox())
    logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É '–°—Ç–æ–ª ARBO NOX'")
    await state.set_state(States.size)


# 2. –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞
@router.callback_query(StateFilter(States.size), F.data.in_(TABLE_SIZES_NOX.keys()))
async def handle_nox_size_selected(callback: CallbackQuery, state: FSMContext):
    """
    ‚úçÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤".
    –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞.
    """
    size_key = callback.data
    await state.update_data(size=size_key)
    logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ä–∞–∑–º–µ—Ä {size_key}")
    msg = await callback.message.edit_text("üìù –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ üëá", reply_markup=keyboard_start_menu())
    await state.update_data(last_bot_message_id=msg.message_id)
    await state.set_state(States.feedback)


# 3. –ü—Ä–∏–µ–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ
@router.message(StateFilter(States.feedback))
async def handle_feedback_text_received(message: Message, state: FSMContext):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–∑—ã–≤ –∏ –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ.
    """
    await state.update_data(feedback=message.text.strip())  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        await message.delete()
    except Exception as e:
        logger.warning(f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—Ç–∑—ã–≤ {message.text.strip()}")
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ (üìù –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ üëá)
    data = await state.get_data()
    last_bot_message_id = data.get("last_bot_message_id")
    if last_bot_message_id:
        try:
            await message.bot.delete_message(chat_id=message.chat.id, message_id=last_bot_message_id)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞: {e}")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞
    msg = await message.answer("üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ, –Ω–æ –Ω–µ –±–æ–ª–µ–µ 10 —à—Ç—É–∫", reply_markup=keyboard_start_menu())
    await state.update_data(last_bot_message_id=msg.message_id)
    await state.set_state(States.photo_video)


# 3. –§–æ—Ç–æ –∏ –∞–ª—å–±–æ–º—ã
@router.message(StateFilter(States.photo_video), F.photo | F.video)
async def handle_media_group(message: Message, state: FSMContext):
    if message.media_group_id:
        album_buffer[message.media_group_id].append(message)
        await asyncio.sleep(1.5)
        # –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–ª—å–±–æ–º–µ
        if album_buffer[message.media_group_id][-1].message_id == message.message_id:
            messages = album_buffer.pop(message.media_group_id)
            logger.info(f"üì∏üé• –ü–æ–ª—É—á–µ–Ω –∞–ª—å–±–æ–º ({len(messages)} –º–µ–¥–∏–∞) –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞
            for msg in messages:
                await msg.delete()
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ
            photos = []
            video = None
            for msg in messages:
                if msg.photo:
                    photos.append(msg.photo[-1].file_id)
                elif msg.video:
                    video = msg.video.file_id
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            data = await state.get_data()
            await state.update_data(photo_ids=photos, video_id=video, photo_response_sent=True)
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
            last_bot_message_id = data.get("last_bot_message_id")
            if last_bot_message_id:
                await safe_delete(message.chat.id, last_bot_message_id)
            # TODO ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–ª—å–±–æ–º. –£–ø—Ä–æ—Å—Ç–∏—Ç—å —Å—Ö–µ–º—É —Ä–∞–±–æ—Ç—ã
            table_size, readable, feedback_text, feedback_status, photo_ids, video_id = await retrieves_users_entered_data(state)
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∑—ã–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if photo_ids:
                media = [InputMediaPhoto(media=pid) for pid in photo_ids]
                media[0].caption = feedback_text
                await message.answer_media_group(media)
            elif video_id:
                await message.answer_video(video_id, caption=feedback_text)
            else:
                await message.answer(f"‚úçÔ∏è –û—Ç–∑—ã–≤:\n{feedback_text}")
            # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            await message.answer("üîé –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–∑—ã–≤ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π. –í—Å—ë –≤–µ—Ä–Ω–æ?",
                                 reply_markup=keyboard_confirm_or_cancel())
            await state.update_data(last_bot_message_id=msg.message_id)
            await state.set_state(States.sending)

    else:  # –ï—Å–ª–∏ –Ω–µ—Ç –∞–ª—å–±–æ–º–∞
        # –ù–µ –∞–ª—å–±–æ–º ‚Üí –∫–∞–∫ —Ä–∞–Ω—å—à–µ
        data = await state.get_data()
        if data.get("photo_response_sent"):
            return
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        last_bot_message_id = data.get("last_bot_message_id")
        if last_bot_message_id:
            try:
                await message.bot.delete_message(chat_id=message.chat.id, message_id=last_bot_message_id)
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞: {e}")
        table_size, readable, feedback_text, feedback_status, photo_ids, video_id = await retrieves_users_entered_data(state)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∑—ã–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if photo_ids:
            media = [InputMediaPhoto(media=pid) for pid in photo_ids]
            media[0].caption = feedback_text
            await message.answer_media_group(media)
        elif video_id:
            await message.answer_video(video_id, caption=feedback_text)
        else:
            await message.answer(f"‚úçÔ∏è –û—Ç–∑—ã–≤:\n{feedback_text}")
        # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        await message.answer("üîé –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–∑—ã–≤ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π. –í—Å—ë –≤–µ—Ä–Ω–æ?", reply_markup=keyboard_confirm_or_cancel())
        await state.update_data(last_bot_message_id=msg.message_id, photo_response_sent=True)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
        photo_id = message.photo[-1].file_id  # –ü–æ–ª—É—á–∞–µ–º –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
        photo_list = data.get("photo_ids", [])
        photo_list.append(photo_id)
        await state.update_data(photo_ids=photo_list)
        await state.set_state(States.sending)


async def retrieves_users_entered_data(state):
    """üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ FSM"""
    data = await state.get_data()
    table_size = data.get("size", "unknown")
    readable = TABLE_SIZES_NOX.get(table_size, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä")
    return (
        table_size,
        readable,
        data.get("feedback", "‚õî –û—Ç–∑—ã–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"),
        data.get("feedback", "no"),
        data.get("photo_ids", []),
        data.get("video_id"),
    )


# üì∏ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
async def send_review_to_user_and_admin(user_id, message, readable, feedback_text, photo_ids, video_id = None):
    try:
        await bot.send_message(chat_id=ADMIN_ID, text=f"üì© –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}!\n\nüì¶ –°—Ç–æ–ª: {readable}\n‚úçÔ∏è –û—Ç–∑—ã–≤:\n{feedback_text}",)
    except Exception as e:
        logger.warning(f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω—É: {e}")
    if photo_ids:
        media = [InputMediaPhoto(media=pid) for pid in photo_ids]
        media[0].caption = feedback_text
        if len(media) == 1:
            await message.answer_photo(photo_ids[0], caption=feedback_text)
        else:
            await message.answer_media_group(media)
            await message.answer("‚¨ÜÔ∏è –≠—Ç–æ –≤–∞—à–∏ —Ñ–æ—Ç–æ –æ—Ç–∑—ã–≤–∞\n\nüëá –ß—Ç–æ –¥–∞–ª—å—à–µ?")
    elif video_id:
        await message.answer_video(video_id, caption=feedback_text)
    await message.answer("üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω üôå", reply_markup=keyboard_start_menu())


@router.callback_query(F.data == "confirm_review")
async def handle_review_confirmation(callback: CallbackQuery, state: FSMContext):
    table_size, readable, feedback_text, feedback_status, photo_ids, video_id = await retrieves_users_entered_data(state)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤
    Review.create(user_id=callback.from_user.id, table_size=readable, feedback_status=feedback_status, feedback_text=feedback_text,)
    logger.success(f"‚úÖ [{callback.from_user.id}] –û—Ç–∑—ã–≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω")
    try:
        await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    except Exception as e:
        logger.warning(f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {callback.message.message_id}: {e}")
    await send_review_to_user_and_admin(
        user_id=callback.from_user.id,
        message=callback.message,
        readable=readable,
        feedback_text=feedback_text,
        photo_ids=photo_ids,
        video_id=video_id
    )
    await state.clear()


def register_NOX_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    router.callback_query.register(handle_nox_table_selection)  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    router.callback_query.register(handle_nox_size_selected)  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    router.message.register(handle_feedback_text_received)  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    router.message.register(handle_media_group)  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
